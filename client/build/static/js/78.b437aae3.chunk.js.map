{"version":3,"file":"static/js/78.b437aae3.chunk.js","mappings":"oNAyCA,GAAeA,EAAAA,EAAAA,IAAQ,MANI,SAACC,GAAQ,MAAM,CACxCC,UAAW,SAACC,GAAI,OAAKF,GAASG,EAAAA,EAAAA,IAAkBD,GAAM,EACtDE,QAAS,SAACF,GAAI,OAAKF,GAASI,EAAAA,EAAAA,IAAQF,GAAM,EAC1CG,WAAY,SAACH,GAAI,OAAKF,GAASK,EAAAA,EAAAA,IAAWH,GAAM,EACjD,GAED,EA/BqB,SAAH,GAAsD,IAAhDI,EAAQ,EAARA,SAAUL,EAAS,EAATA,UAAWG,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAC5CE,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAC/B,OACE,iBAAKC,UAAU,gBAAe,WAC5B,gBAAKA,UAAU,kBAAiB,UAC9B,gBAAKC,IAAKJ,EAAUK,IAAI,YAE1B,iBAAMF,UAAU,OAAM,SAAEJ,KACxB,kBAAMI,UAAU,WAAU,WACxB,gBAAKA,UAAU,QAAQG,QAAS,kBAAMT,EAAWC,EAAS,EAAC,qBAG3D,kBAAMK,UAAU,QAAO,cAAGD,EAAQ,QAClC,gBAAKC,UAAU,QAAQG,QAAS,kBAAMV,EAAQE,EAAS,EAAC,wBAI1D,iBAAMK,UAAU,QAAO,SAAEF,KACzB,gBAAKE,UAAU,gBAAgBG,QAAS,kBAAMb,EAAUK,EAAS,EAAC,sBAKxE,I,oBCWA,EAxC6B,SAAH,GAAmB,IAAbG,EAAK,EAALA,MACxBM,EAAyB,IAARN,EAuBvB,OACE,SAAC,IAAc,CACbO,MAAM,UACNT,KAAK,iBACLU,gBAAc,EACdC,iBAAe,EACfC,MAAM,iCACNC,YAAW,yBAAoBX,GAC/BY,OAAQN,EACRO,WAAW,UACXC,MA7BY,SAACA,IACfC,EAAAA,EAAAA,GAAM,CACJC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACJN,OAAQN,EACRQ,MAAOA,KAGRK,MAAK,SAACC,GACLC,MAAM,yBACR,IACCC,OAAM,SAACC,GACNC,QAAQC,IAAI,kBAAmBF,GAC/BF,MACE,2FAEJ,GACJ,EAYIK,UAhCF,+GAmCJ,E,6BCxCaC,EAAwBC,EAAAA,GAAAA,IAAU,yRAgBlCC,EAA0BD,EAAAA,GAAAA,IAAU,oJAQpCE,EAAuBF,EAAAA,GAAAA,IAAU,2NAcjCG,EAAiBH,EAAAA,GAAAA,IAAU,uFAM3BI,EAAmBJ,EAAAA,GAAAA,IAAU,uGCS1C,EAvCqB,WACnB,IAAMK,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAE1B,OACE,UAACV,EAAqB,YACpB,UAACE,EAAuB,YACtB,SAACC,EAAoB,WACnB,yCAEF,SAACA,EAAoB,WACnB,6CAEF,SAACA,EAAoB,WACnB,yCAEF,SAACA,EAAoB,WACnB,uCAEF,SAACA,EAAoB,WACnB,0CAGHG,EAAUK,KAAI,SAACzC,GAAQ,OACtB,SAAC,EAAY,CAAmBA,SAAUA,GAAvBA,EAAS0C,GAA0B,KAExD,SAACR,EAAc,WACb,uCAAeK,QAEjB,UAACJ,EAAgB,uEAEf,kBAAM,iEAGR,SAAC,EAAoB,CAAChC,MAAOoC,MAGnC,C","sources":["componenets/checkout-item/checkout-item.jsx","componenets/stripe-button/stripe-button.jsx","pages/checkout/checkout.styles.jsx","pages/checkout/checkout.jsx"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  addItem,\r\n  clearItemFromCart,\r\n  removeItem,\r\n} from '../../redux/cart/cart.actions';\r\n\r\nimport './checkout-item.styles.scss';\r\n\r\nconst CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\r\n  const { name, imageUrl, price, quantity } = cartItem;\r\n  return (\r\n    <div className=\"checkout-item\">\r\n      <div className=\"image-container\">\r\n        <img src={imageUrl} alt=\"item\" />\r\n      </div>\r\n      <span className=\"name\">{name}</span>\r\n      <span className=\"quantity\">\r\n        <div className=\"arrow\" onClick={() => removeItem(cartItem)}>\r\n          &#10094;\r\n        </div>\r\n        <span className=\"value\"> {quantity} </span>\r\n        <div className=\"arrow\" onClick={() => addItem(cartItem)}>\r\n          &#10095;\r\n        </div>\r\n      </span>\r\n      <span className=\"price\">{price}</span>\r\n      <div className=\"remove-button\" onClick={() => clearItem(cartItem)}>\r\n        &#10005;\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  clearItem: (item) => dispatch(clearItemFromCart(item)),\r\n  addItem: (item) => dispatch(addItem(item)),\r\n  removeItem: (item) => dispatch(removeItem(item)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckoutItem);\r\n","import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport axios from 'axios';\r\n\r\nconst StripeCheckoutButton = ({ price }) => {\r\n  const priceForStripe = price * 100;\r\n  const publishableKey =\r\n    'pk_test_51KedP1Jo0XIvXVBFLSlFGAyYRjPt22eeD8glqG1ugfbPnjc1NhDZCJZl3PN2rgeu0lBIMXEvrBsugPsV4RR9v0YJ005dI0Nwgr';\r\n\r\n  const onToken = (token) => {\r\n    axios({\r\n      url: 'payment',\r\n      method: 'post',\r\n      data: {\r\n        amount: priceForStripe,\r\n        token: token,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        alert('succesful payment done');\r\n      })\r\n      .catch((error) => {\r\n        console.log('Payment Error: ', error);\r\n        alert(\r\n          'There was an issue with your payment! Please make sure you use the provided credit card.'\r\n        );\r\n      });\r\n  };\r\n  return (\r\n    <StripeCheckout\r\n      label=\"Pay Now\"\r\n      name=\"Clothing Store\"\r\n      billingAddress\r\n      shippingAddress\r\n      image=\"https://svgshare.com/i/CUz.svg\"\r\n      description={`Your total is $${price}`}\r\n      amount={priceForStripe}\r\n      panelLabel=\"Pay Now\"\r\n      token={onToken}\r\n      stripeKey={publishableKey}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StripeCheckoutButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const CheckoutPageContainer = styled.div`\r\n  width: 55%;\r\n  min-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 50px auto 0;\r\n  button {\r\n    margin-left: auto;\r\n    margin-top: 50px;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const CheckoutHeaderContainer = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid darkgrey;\r\n`;\r\n\r\nexport const HeaderBlockContainer = styled.div`\r\n  text-transform: capitalize;\r\n  width: 23%;\r\n  &:last-child {\r\n    width: 8%;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 22%;\r\n    &:last-child {\r\n      width: 12%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TotalContainer = styled.div`\r\n  margin-top: 30px;\r\n  margin-left: auto;\r\n  font-size: 36px;\r\n`;\r\n\r\nexport const WarningContainer = styled.div`\r\n  text-align: center;\r\n  margin-top: 40px;\r\n  font-size: 24px;\r\n  color: red;\r\n`;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CheckoutItem from '../../componenets/checkout-item/checkout-item';\r\nimport StripeCheckoutButton from '../../componenets/stripe-button/stripe-button';\r\nimport {\r\n  selectCartItems,\r\n  selectCartTotal,\r\n} from '../../redux/cart/cart.selectors';\r\nimport {\r\n  CheckoutHeaderContainer,\r\n  CheckoutPageContainer,\r\n  HeaderBlockContainer,\r\n  TotalContainer,\r\n  WarningContainer,\r\n} from './checkout.styles';\r\n\r\nconst CheckoutPage = () => {\r\n  const cartItems = useSelector(selectCartItems);\r\n  const total = useSelector(selectCartTotal);\r\n\r\n  return (\r\n    <CheckoutPageContainer>\r\n      <CheckoutHeaderContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Product</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Description</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Quanity</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Price</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Remove</span>\r\n        </HeaderBlockContainer>\r\n      </CheckoutHeaderContainer>\r\n      {cartItems.map((cartItem) => (\r\n        <CheckoutItem key={cartItem.id} cartItem={cartItem} />\r\n      ))}\r\n      <TotalContainer>\r\n        <span>TOTAL: ${total}</span>\r\n      </TotalContainer>\r\n      <WarningContainer>\r\n        *PLease use the following test credit card for payments*\r\n        <br />\r\n        4242 4242 4242 4242 - Exp:any date in the futurue -CVV:123\r\n      </WarningContainer>\r\n      <StripeCheckoutButton price={total} />\r\n    </CheckoutPageContainer>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;\r\n"],"names":["connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","name","imageUrl","price","quantity","className","src","alt","onClick","priceForStripe","label","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","url","method","data","then","response","alert","catch","error","console","log","stripeKey","CheckoutPageContainer","styled","CheckoutHeaderContainer","HeaderBlockContainer","TotalContainer","WarningContainer","cartItems","useSelector","selectCartItems","total","selectCartTotal","map","id"],"sourceRoot":""}